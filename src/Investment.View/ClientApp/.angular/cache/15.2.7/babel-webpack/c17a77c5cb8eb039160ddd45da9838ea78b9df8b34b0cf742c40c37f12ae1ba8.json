{"ast":null,"code":"import _asyncToGenerator from \"/Users/welingtonmarquezini/Projects/Investment/src/Investment.View/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./investment.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./investment.component.css?ngResource\";\nimport { Component, EventEmitter, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { InvestmentService } from '../services/investment.service';\nlet InvestmentComponent = (_class = class InvestmentComponent {\n  constructor(investmentService, fb) {\n    this.investmentService = investmentService;\n    this.fb = fb;\n    this.onSubmit = new EventEmitter();\n    this.investments = [];\n    this.investment = {};\n    this.formLabel = \"\";\n    this.isEditMode = false;\n    this.fb.group({\n      'initialValue': [\"\", Validators.required],\n      'periodInMonths': [\"\", Validators.required]\n    });\n    this.formLabel = \"Simulador de Investimento\";\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      initialValue: new FormControl('', [Validators.required]),\n      periodInMonths: new FormControl('', [Validators.required])\n    });\n  }\n  get initialValue() {\n    return this.form.get(\"initialValue\");\n  }\n  get periodInMonths() {\n    return this.form.get(\"periodInMonths\");\n  }\n  setValueInvestment(investment) {\n    this.investments.push(investment);\n    this.investments.forEach(i => {\n      i.initialValue = parseFloat(investment.finalValue.toFixed(2));\n      i.netValue = parseFloat(i.netValue.toFixed(2));\n    });\n  }\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.investment.initialValue = this.form.controls['initialValue'].value;\n    this.investment.periodInMonths = this.form.controls['periodInMonths'].value;\n    this.investmentService.getValueInvestment(this.investment).subscribe(resp => {\n      this.setValueInvestment(resp);\n      this.form.get(\"initialValue\")?.setValue('0');\n      this.form.get(\"periodInMonths\")?.setValue('0');\n    });\n    this.cancel();\n    this.form.dirty;\n  }\n  send(event) {\n    return _asyncToGenerator(function* () {})();\n  }\n  cancel() {\n    this.formLabel = \"Nova Análise\";\n    this.isEditMode = false;\n    this.investment = {};\n    this.form.get(\"initialValue\")?.setValue(' ');\n    this.form.get(\"periodInMonths\")?.setValue(' ');\n    this.form.dirty;\n  }\n}, _class.ctorParameters = () => [{\n  type: InvestmentService\n}, {\n  type: FormBuilder\n}], _class.propDecorators = {\n  onSubmit: [{\n    type: Input\n  }],\n  btnText: [{\n    type: Input\n  }]\n}, _class);\nInvestmentComponent = __decorate([Component({\n  selector: 'app-investment',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], InvestmentComponent);\nexport { InvestmentComponent };","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Input","FormGroup","FormControl","FormBuilder","Validators","InvestmentService","InvestmentComponent","constructor","investmentService","fb","group","required","formLabel","ngOnInit","form","initialValue","periodInMonths","get","setValueInvestment","investment","investments","push","forEach","i","parseFloat","finalValue","toFixed","netValue","submit","invalid","controls","value","getValueInvestment","subscribe","resp","setValue","cancel","dirty","send","event","isEditMode","selector","template"],"sourceRoot":"","sources":["/Users/welingtonmarquezini/Projects/Investment/src/Investment.View/ClientApp/src/app/investment/investment.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { IInvestment } from '../models/investment.interface';\nimport { InvestmentService } from '../services/investment.service';\n\n@Component({\n  selector: 'app-investment',\n  templateUrl: './investment.component.html',\n  styleUrls: ['./investment.component.css']\n})\n\nexport class InvestmentComponent implements OnInit {\n  @Input() onSubmit = new EventEmitter<IInvestment>();\n  @Input() btnText!: string;\n  investments : IInvestment[] = [];\n  investment : IInvestment = <IInvestment>{};\n\n  formLabel : string = \"\";\n  isEditMode : boolean = false;\n  form! : FormGroup;\n\n  constructor(private investmentService : InvestmentService,\n              private fb : FormBuilder) {\n            this.fb.group({\n              'initialValue' : [\"\", Validators.required],\n              'periodInMonths' : [\"\", Validators.required]\n            });\n        this.formLabel = \"Simulador de Investimento\";\n    }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      initialValue: new FormControl('', [Validators.required]),\n      periodInMonths: new FormControl('', [Validators.required]),\n    });\n  }\n  \n  get initialValue(){\n    return this.form.get(\"initialValue\")!;\n  }\n\n  get periodInMonths (){\n    return this.form.get(\"periodInMonths\")!;\n  }\n\n  private setValueInvestment(investment: any) {\n      this.investments.push(investment);\n      this.investments.forEach(i => {\n        i.initialValue = parseFloat(investment.finalValue.toFixed(2));\n        i.netValue = parseFloat(i.netValue.toFixed(2));\n      });\n          \n      \n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n\n      this.investment.initialValue = this.form.controls['initialValue'].value;\n      this.investment.periodInMonths = this.form.controls['periodInMonths'].value;\n      \n      this.investmentService.getValueInvestment(this.investment)\n      .subscribe(resp =>{\n            this.setValueInvestment(resp);\n            this.form.get(\"initialValue\")?.setValue('0');\n            this.form.get(\"periodInMonths\")?.setValue('0');\n        }\n      );\n      this.cancel();\n      \n      this.form.dirty;\n  }\n\n  async send(event : any) {\n  };\n\n  cancel() : void{\n      this.formLabel = \"Nova Análise\";\n      this.isEditMode = false;\n      this.investment = <IInvestment>{};\n      this.form.get(\"initialValue\")?.setValue(' ');\n      this.form.get(\"periodInMonths\")?.setValue(' ');\n      this.form.dirty;\n  };\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}