{"ast":null,"code":"import _asyncToGenerator from \"/Users/welingtonmarquezini/Projects/Investment/src/Investment.View/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet InvestmentComponent = class InvestmentComponent {\n  constructor(investmentService, fb) {\n    this.investmentService = investmentService;\n    this.fb = fb;\n    this.onSubmit = new EventEmitter();\n    this.investments = [];\n    this.investment = {};\n    this.formLabel = \"\";\n    this.isEditMode = false;\n    this.fb.group({\n      'initialValue': [\"\", Validators.required],\n      'periodInMonths': [\"\", Validators.required]\n    });\n    this.formLabel = \"An치lise Investimento\";\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      initialValue: new FormControl('', [Validators.required]),\n      periodInMonths: new FormControl('', [Validators.required])\n    });\n  }\n  get initialValue() {\n    return this.form.get(\"initialValue\");\n  }\n  get periodInMonths() {\n    return this.form.get(\"periodInMonths\");\n  }\n  getValueInvestment(IInvestment) {\n    // this.investmentService.getValueInvestment(IInvestment).subscribe(\n    //     data => { this.investments = data\n    //       this.investments.forEach(i => {\n    //         i.initialValue = parseFloat(i.initialValue.toFixed(2));\n    //       });\n    //     },\n    //     error => alert(error),\n    //     () => console.log(this.investments)\n    // );\n  }\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.investment.initialValue = this.form.controls['initialValue'].value;\n    this.investment.periodInMonths = this.form.controls['periodInMonths'].value;\n    this.investmentService.getValueInvestment(this.investment).subscribe(resp => {\n      this.getValueInvestment(this.investment), this.form.reset();\n    });\n    this.cancel();\n    this.form.dirty;\n  }\n  send(event) {\n    return _asyncToGenerator(function* () {})();\n  }\n  cancel() {\n    this.formLabel = \"Nova An치lise\";\n    this.isEditMode = false;\n    this.investment = {};\n    this.form.get(\"descricaoCurso\")?.setValue(' ');\n    this.form.dirty;\n  }\n};\n__decorate([Input()], InvestmentComponent.prototype, \"onSubmit\", void 0);\n__decorate([Input()], InvestmentComponent.prototype, \"btnText\", void 0);\nInvestmentComponent = __decorate([Component({\n  selector: 'app-investment',\n  templateUrl: './investment.component.html',\n  styleUrls: ['./investment.component.css']\n})], InvestmentComponent);\nexport { InvestmentComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,QAAgB,eAAe;AACtE,SAASC,SAAS,EAAEC,WAAW,EAAeC,UAAU,QAAQ,gBAAgB;AAUzE,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAU9BC,YAAoBC,iBAAqC,EACrCC,EAAgB;IADhB,sBAAiB,GAAjBD,iBAAiB;IACjB,OAAE,GAAFC,EAAE;IAVb,aAAQ,GAAG,IAAIR,YAAY,EAAe;IAEnD,gBAAW,GAAmB,EAAE;IAChC,eAAU,GAA8B,EAAE;IAE1C,cAAS,GAAY,EAAE;IACvB,eAAU,GAAa,KAAK;IAKlB,IAAI,CAACQ,EAAE,CAACC,KAAK,CAAC;MACZ,cAAc,EAAG,CAAC,EAAE,EAAEL,UAAU,CAACM,QAAQ,CAAC;MAC1C,gBAAgB,EAAG,CAAC,EAAE,EAAEN,UAAU,CAACM,QAAQ;KAC5C,CAAC;IACN,IAAI,CAACC,SAAS,GAAG,sBAAsB;EAC3C;EAEFC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAIX,SAAS,CAAC;MACxBY,YAAY,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACM,QAAQ,CAAC,CAAC;MACxDK,cAAc,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACM,QAAQ,CAAC;KAC1D,CAAC;EACJ;EAEA,IAAII,YAAY;IACd,OAAO,IAAI,CAACD,IAAI,CAACG,GAAG,CAAC,cAAc,CAAE;EACvC;EAEA,IAAID,cAAc;IAChB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,gBAAgB,CAAE;EACzC;EAEQC,kBAAkB,CAACC,WAAwB;IAC/C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAGJC,MAAM;IACJ,IAAI,IAAI,CAACN,IAAI,CAACO,OAAO,EAAE;MACrB;;IAGA,IAAI,CAACC,UAAU,CAACP,YAAY,GAAG,IAAI,CAACD,IAAI,CAACS,QAAQ,CAAC,cAAc,CAAC,CAACC,KAAK;IACvE,IAAI,CAACF,UAAU,CAACN,cAAc,GAAG,IAAI,CAACF,IAAI,CAACS,QAAQ,CAAC,gBAAgB,CAAC,CAACC,KAAK;IAE3E,IAAI,CAAChB,iBAAiB,CAACU,kBAAkB,CAAC,IAAI,CAACI,UAAU,CAAC,CACzDG,SAAS,CAACC,IAAI,IAAG;MACV,IAAI,CAACR,kBAAkB,CAAC,IAAI,CAACI,UAAU,CAAC,EACxC,IAAI,CAACR,IAAI,CAACa,KAAK,EAAE;IACzB,CAAC,CAAC;IACF,IAAI,CAACC,MAAM,EAAE;IAEb,IAAI,CAACd,IAAI,CAACe,KAAK;EACnB;EAEMC,IAAI,CAACC,KAAW;IAAA;EACtB;EAEAH,MAAM;IACF,IAAI,CAAChB,SAAS,GAAG,cAAc;IAC/B,IAAI,CAACoB,UAAU,GAAG,KAAK;IACvB,IAAI,CAACV,UAAU,GAAgB,EAAE;IACjC,IAAI,CAACR,IAAI,CAACG,GAAG,CAAC,gBAAgB,CAAC,EAAEgB,QAAQ,CAAC,GAAG,CAAC;IAC9C,IAAI,CAACnB,IAAI,CAACe,KAAK;EACnB;CACD;AAzEUK,YAARhC,KAAK,EAAE,qDAA4C;AAC3CgC,YAARhC,KAAK,EAAE,oDAAkB;AAFfI,mBAAmB,eAN/BN,SAAS,CAAC;EACTmC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GAEW/B,mBAAmB,CA0E/B;SA1EYA,mBAAmB","names":["Component","EventEmitter","Input","FormGroup","FormControl","Validators","InvestmentComponent","constructor","investmentService","fb","group","required","formLabel","ngOnInit","form","initialValue","periodInMonths","get","getValueInvestment","IInvestment","submit","invalid","investment","controls","value","subscribe","resp","reset","cancel","dirty","send","event","isEditMode","setValue","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/welingtonmarquezini/Projects/Investment/src/Investment.View/ClientApp/src/app/investment/investment.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { IInvestment } from '../models/investment.interface';\nimport { InvestmentService } from '../services/investment.service';\n\n@Component({\n  selector: 'app-investment',\n  templateUrl: './investment.component.html',\n  styleUrls: ['./investment.component.css']\n})\n\nexport class InvestmentComponent implements OnInit {\n  @Input() onSubmit = new EventEmitter<IInvestment>();\n  @Input() btnText!: string;\n  investments : IInvestment[] = [];\n  investment : IInvestment = <IInvestment>{};\n\n  formLabel : string = \"\";\n  isEditMode : boolean = false;\n  form! : FormGroup;\n\n  constructor(private investmentService : InvestmentService,\n              private fb : FormBuilder) {\n            this.fb.group({\n              'initialValue' : [\"\", Validators.required],\n              'periodInMonths' : [\"\", Validators.required]\n            });\n        this.formLabel = \"An치lise Investimento\";\n    }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      initialValue: new FormControl('', [Validators.required]),\n      periodInMonths: new FormControl('', [Validators.required]),\n    });\n  }\n  \n  get initialValue(){\n    return this.form.get(\"initialValue\")!;\n  }\n\n  get periodInMonths (){\n    return this.form.get(\"periodInMonths\")!;\n  }\n\n  private getValueInvestment(IInvestment: IInvestment) {\n      // this.investmentService.getValueInvestment(IInvestment).subscribe(\n      //     data => { this.investments = data\n      //       this.investments.forEach(i => {\n      //         i.initialValue = parseFloat(i.initialValue.toFixed(2));\n      //       });\n      //     },\n      //     error => alert(error),\n      //     () => console.log(this.investments)\n      // );\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n\n      this.investment.initialValue = this.form.controls['initialValue'].value;\n      this.investment.periodInMonths = this.form.controls['periodInMonths'].value;\n      \n      this.investmentService.getValueInvestment(this.investment)\n      .subscribe(resp =>{\n              this.getValueInvestment(this.investment),\n              this.form.reset()\n      });\n      this.cancel();\n      \n      this.form.dirty;\n  }\n\n  async send(event : any) {\n  };\n\n  cancel() : void{\n      this.formLabel = \"Nova An치lise\";\n      this.isEditMode = false;\n      this.investment = <IInvestment>{};\n      this.form.get(\"descricaoCurso\")?.setValue(' ');\n      this.form.dirty;\n  };\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}